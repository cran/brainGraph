% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/robustness.R
\name{robustness}
\alias{robustness}
\title{Analysis of network robustness}
\usage{
robustness(g, type = c("vertex", "edge"), measure = c("btwn.cent",
  "degree", "random"), N = 1000)
}
\arguments{
\item{g}{An \code{igraph} graph object}

\item{type}{Character string; either 'vertex' or 'edge' removals (default:
\code{vertex})}

\item{measure}{Character string; sort by either 'btwn.cent' or 'degree', or
choose 'random' (default: \code{btwn.cent})}

\item{N}{Integer; the number of iterations if \emph{random} is chosen
(default: \code{1e3})}
}
\value{
Data table with elements:
  \item{type}{Character string describing the type of analysis performed}
  \item{measure}{The input argument \code{measure}}
  \item{comp.pct}{Numeric vector of the ratio of maximal component size after
    each removal to the observed graph's maximal component size}
  \item{removed.pct}{Numeric vector of the ratio of vertices/edges removed}
  \item{Group}{Character string indicating the subject group, if applicable}
}
\description{
This function performs a "targeted attack" of a graph or a "random failure"
analysis, calculating the size of the largest component after edge or vertex
removal.
}
\details{
In a targeted attack, it will sort the vertices by either degree or
betweenness centrality (or sort edges by betweenness), and successively
remove the top vertices/edges. Then it calculates the size of the largest
component.

In a random failure analysis, vertices/edges are removed in a random order.
}
\references{
Albert R., Jeong H., Barabasi A. (2000) \emph{Error and attack
tolerance of complex networks}. Nature, 406:378-381.
}
\author{
Christopher G. Watson, \email{cgwatson@bu.edu}
}
